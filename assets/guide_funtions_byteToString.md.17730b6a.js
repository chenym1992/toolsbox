import{k as a,l as n}from"./chunks/toolsbox.esm.6b4265b1.js";import{r as o,d as l,o as t,c as p,a as e,t as r,u as c,b as y}from"./app.2a2c9974.js";const C=y(`<h1 id="bytetostring-\u5B57\u8282\u6570\u7EC4\u8F6C\u5B57\u7B26\u4E32" tabindex="-1">byteToString \u5B57\u8282\u6570\u7EC4\u8F6C\u5B57\u7B26\u4E32 <a class="header-anchor" href="#bytetostring-\u5B57\u8282\u6570\u7EC4\u8F6C\u5B57\u7B26\u4E32" aria-hidden="true">#</a></h1><p><a href="https://github.com/chenym1992/toolsbox/blob/main/src/funtions/byteToString.ts" target="_blank" rel="noreferrer">source</a></p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">byteToString</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fe-toolsbox</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> byte </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">104</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">101</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">108</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">108</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">111</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">119</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">111</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">114</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">108</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">] </span></span>
<span class="line"><span style="color:#676E95;">//\u7D27\u793A\u610F\uFF0C\u9700\u8981ArrayBuffer\u6570\u636E</span></span>
<span class="line"><span style="color:#82AAFF;">byteToString</span><span style="color:#A6ACCD;">(byte)</span></span>
<span class="line"></span></code></pre></div>`,3),D={class:"demo"},b=JSON.parse('{"title":"byteToString \u5B57\u8282\u6570\u7EC4\u8F6C\u5B57\u7B26\u4E32","description":"","frontmatter":{},"headers":[],"relativePath":"guide/funtions/byteToString.md","lastUpdated":1663905595000}'),F={name:"guide/funtions/byteToString.md"},g=Object.assign(F,{setup(i){const s=o();return l(()=>{s.value=a("hello world")}),(A,d)=>(t(),p("div",null,[C,e("div",D,r(c(n)(s.value)),1)]))}});export{b as __pageData,g as default};
